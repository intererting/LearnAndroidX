plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
//    id 'kotlin-parcelize'
    // apply ByteX宿主
//    id 'bytex'
}
//ByteX {
//    enable true
//    enableInDebug false
//    logLevel "DEBUG"
//}


android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.example.learnandroidx"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

//        room.schemaLocation：配置并启用将数据库架构导出到给定目录中的 JSON 文件的功能。如需了解详情，请参阅 Room 迁移。
//        room.incremental：启用 Gradle 增量注解处理器。
//        room.expandProjection：配置 Room 以重写查询，使其顶部星形投影在展开后仅包含 DAO 方法返回类型中定义的列。
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += [
//                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
//                        "room.incremental"     : "true",
//                        "room.expandProjection": "true"]
//            }
//        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
//    viewBinding {
//        enabled = true
//    }

    buildFeatures {
        dataBinding = true
    }

}

class MyTask extends DefaultTask {

    String name = "yuliyang"

    @TaskAction
    void test() {
        println "xxxxxxxxxxxxxxxxxxxxx"
    }
}

tasks.create("helloWorld", MyTask)

kapt {
    arguments {
        arg('eventBusIndex', 'com.example.learnandroidx.eventbus.MyEventBusIndex')
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    def activity_version = "1.1.0"
    // Kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"


    def lifecycle_version = "2.2.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha01"

    def appcompat_version = "1.2.0"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    // For loading and tinting drawables on older versions of the platform
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"

    def fragment_version = "1.3.0"
    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    def core_version = "1.3.2"

    implementation "androidx.core:core-ktx:$core_version"

    implementation "androidx.customview:customview:1.1.0"

    implementation "androidx.savedstate:savedstate-ktx:1.1.0-beta01"

    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"

//    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
//    implementation 'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头
//    implementation 'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载


    def work_version = "2.5.0"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation 'org.greenrobot:eventbus:3.2.0'
    kapt "org.greenrobot:eventbus-annotation-processor:3.2.0"

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:4.12.0"

    implementation("io.coil-kt:coil:1.2.0")
}